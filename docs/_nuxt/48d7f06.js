(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{291:function(n,e,t){var content=t(299);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,t(64).default)("7a893561",content,!0,{sourceMap:!1})},298:function(n,e,t){"use strict";t(291)},299:function(n,e,t){var l=t(63)(!1);l.push([n.i,".readme[data-v-0ed3b866] >section>p:nth-child(2){font-size:0}.readme[data-v-0ed3b866]  a{display:inline-block;margin:2px 1px}",""]),n.exports=l},300:function(n,e,t){"use strict";t.r(e);var l=t(8),r=(t(46),t(125),t(50),t(179),t(49),t(19),t(25),t(47),t(33),t(32),t(45),t(48),t(34),t(292)),o=t.n(r),c=t(293),h=t.n(c),d=t(294),m=t.n(d),x=t(295),f=t.n(x);function j(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=function(n,e){if(!n)return;if("string"==typeof n)return y(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return y(n,e)}(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var i=0,l=function(){};return{s:l,n:function(){return i>=n.length?{done:!0}:{done:!1,value:n[i++]}},e:function(n){throw n},f:l}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,c=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return o=n.done,n},e:function(n){c=!0,r=n},f:function(){try{o||null==t.return||t.return()}finally{if(c)throw r}}}}function y(n,e){(null==e||e>n.length)&&(e=n.length);for(var i=0,t=new Array(e);i<e;i++)t[i]=n[i];return t}var v='<section><h1>üîå Nuxt Humans Txt</h1>\n<p><a href="https://luxdamore.github.io/nuxt-humans-txt/"><img src="https://img.shields.io/badge/code%20quality-A-informational?style=flat" alt="Code Quality"></a><br>\n<a href="https://npmjs.com/package/@luxdamore/nuxt-humans-txt"><img src="https://img.shields.io/badge/dependencies-up%20to%20date-darkgreen.svg?style=flat" alt="Dependencies"></a><br>\n<a href="https://circleci.com/gh/LuXDAmore/nuxt-humans-txt"><img src="https://img.shields.io/circleci/project/github/LuXDAmore/nuxt-humans-txt.svg?style=flat&amp;color=darkgreen" alt="Circle CI"></a><br>\n<a href="https://npmjs.com/package/@luxdamore/nuxt-humans-txt"><img src="https://img.shields.io/npm/dt/@luxdamore/nuxt-humans-txt.svg?style=flat&amp;color=orange" alt="npm downloads"></a><br>\n<a href="https://npmjs.com/package/@luxdamore/nuxt-humans-txt"><img src="https://img.shields.io/npm/v/@luxdamore/nuxt-humans-txt/latest.svg?style=flat&amp;color=orange" alt="npm version"></a><br>\n<a href="https://www.paypal.me/luxdamore"><img src="https://img.shields.io/badge/paypal-donate-black.svg?style=flat" alt="Donate"></a></p>\n<blockquote>\n<p>\'We are people, not machines\'. An initiative to know the creators of a website. Contains the information about humans to the web building - A Nuxt Module to statically integrate and generate a humans.txt author file - Based on the HumansTxt Project.</p>\n</blockquote>\n<h2>üíò Motivation</h2>\n<h3>What is humans.txt?</h3>\n<p>It\'s an initiative for knowing the people behind a website. It\'s a TXT file that contains information about the different people who have contributed to building the website.</p>\n<h3>Why a TXT?</h3>\n<p>Because it\'s something fast to create. Because it\'s not intrusive with the code. More often than not, the owners of the site don\'t like the authors signing it; they claim that doing so may make the site less efficient. By adding a txt file, you can prove your authorship (not your property) in an external and accessible way.</p>\n<h3>Who should I mention</h3>\n<p>Whoever you want to, provided they wish you to do so. You can mention the developer, the designer, the copywriter, the webmaster, the SEO, SEM or SMO...<br>\nAs you can see, the number of people who may take part of the creation of a site can be big, so the list is almost endless.</p>\n<blockquote>\n<p><strong>Humans.txt Project</strong>: You can read more about it, on the <a href="http://humanstxt.org/">website</a>.</p>\n</blockquote>\n<hr>\n<h4>üí° Lighthouse</h4>\n<p>No changes on audits.</p>\n<p><img src="./src/static/lighthouse/before.jpg" alt="Lighthouse Audit before"><br>\n<img src="./src/static/lighthouse/after.jpg" alt="Lighthouse Audit after"></p>\n<hr>\n<h2>Setup</h2>\n<ul>\n<li>Add <code>@luxdamore/nuxt-humans-txt</code> dependency to your project;</li>\n<li>Setup <code>@luxdamore/nuxt-humans-txt</code> as a <code>buildModules</code> in your <code>nuxt.config.js</code> file;</li>\n</ul>\n<p><em>N.B.: for <code>nuxt &lt; v2.9</code>, you must use <code>modules</code> instead of <code>buildModules</code>.</em></p>\n<pre><code class="language-bash">\n    <span class="hljs-comment"># cmd</span>\n    yarn add @luxdamore/nuxt-humans-txt <span class="hljs-comment"># or npm install --save @luxdamore/nuxt-humans-txt</span>\n\n</code></pre>\n<h2>Configuration</h2>\n<p><em>N.B.: It\'s recommended to append <code>static/humans.txt</code> (depending on <code>your-static folder-path</code>) to the <code>.gitignore</code> file.</em></p>\n<pre><code class="language-js">\n    <span class="hljs-comment">// nuxt.config.js</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n        <span class="hljs-attr">buildModules</span>: [ <span class="hljs-string">&#x27;@luxdamore/nuxt-humans-txt&#x27;</span> ], <span class="hljs-comment">// For `nuxt &lt; v2.9`, you must use `modules` instead of `buildModules`</span>\n        <span class="hljs-comment">// Default config</span>\n        <span class="hljs-attr">humansTxt</span>: {\n            <span class="hljs-attr">enabled</span>: <span class="hljs-literal">true</span>,\n            <span class="hljs-attr">hideGenericMessagesInConsole</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// Disabled in production</span>\n            <span class="hljs-attr">hideErrorsInConsole</span>: <span class="hljs-literal">false</span>,\n            <span class="hljs-attr">fileName</span>: <span class="hljs-string">&#x27;humans.txt&#x27;</span>,\n            <span class="hljs-attr">fileEncoding</span>: <span class="hljs-string">&#x27;utf8&#x27;</span>,\n            <span class="hljs-attr">link</span>: {\n                <span class="hljs-comment">// Inject `&lt;link type=&quot;text/plain&quot; rel=&quot;&lt;link.rel&gt;&quot; href=&quot;&lt;link.href&gt;&lt;filename&gt;&quot; /&gt;` inside the `head`</span>\n                <span class="hljs-comment">// Set to `link: false` to disable this behavior</span>\n                <span class="hljs-attr">rel</span>: <span class="hljs-string">&#x27;author&#x27;</span>,\n                <span class="hljs-attr">href</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n                <span class="hljs-attr">hid</span>: <span class="hljs-string">&#x27;humans-txt&#x27;</span>,\n            },\n            <span class="hljs-attr">keepDevelopersInformations</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// Keep info of my work in your `humans.txt` file üòç</span>\n            <span class="hljs-comment">// &quot;The internet is for humans&quot;</span>\n            <span class="hljs-attr">thanksTo</span>: [],\n            <span class="hljs-attr">site</span>: [\n                <span class="hljs-string">&#x27;SITE&#x27;</span>,\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Last update&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toLocaleDateString(\n                        <span class="hljs-string">&#x27;en-US&#x27;</span>,\n                        {\n                            <span class="hljs-attr">month</span>: <span class="hljs-string">&#x27;2-digit&#x27;</span>,\n                            <span class="hljs-attr">day</span>: <span class="hljs-string">&#x27;2-digit&#x27;</span>,\n                            <span class="hljs-attr">year</span>: <span class="hljs-string">&#x27;numeric&#x27;</span>,\n                        }\n                    ),\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Standards&#x27;</span>,\n                    <span class="hljs-attr">value</span>: [\n                        <span class="hljs-string">&#x27;HTML5&#x27;</span>,\n                        <span class="hljs-string">&#x27;CSS3&#x27;</span>,\n                        <span class="hljs-string">&#x27;Javascript&#x27;</span>,\n                    ],\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Components&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;VueJs&#x27;</span>,\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Software&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;NuxtJs&#x27;</span>,\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Language&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;English&#x27;</span>,\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Doctype&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;HTML5&#x27;</span>,\n                },\n            ],\n        },\n    };\n\n</code></pre>\n<hr>\n<p><em>Ex. of config:</em></p>\n<pre><code class="language-js">\n    <span class="hljs-comment">// nuxt.config.js</span>\n    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n        <span class="hljs-attr">humansTxt</span>: {\n            <span class="hljs-attr">thanksTo</span>: [\n                <span class="hljs-comment">// Simple string can be added for comments rows</span>\n                <span class="hljs-string">&#x27;BACKSTAGE&#x27;</span>,\n                <span class="hljs-comment">// Objects { key: &#x27;foo&#x27;, value: &#x27;bar&#x27; } for rows with different values</span>\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;HumansTxt Plugin developer&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Luca Iaconelli&#x27;</span>,\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;From&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;Faenza, Italy&#x27;</span>,\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Twitter&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;@luxdamore&#x27;</span>,\n                },\n                {\n                    <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;Instagram&#x27;</span>,\n                    <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;https://www.instagram.com/luxdamore&#x27;</span>,\n                },\n                <span class="hljs-comment">// Falsy values for empty-lines</span>\n                <span class="hljs-literal">false</span>,\n            ],\n            <span class="hljs-comment">// Keep extra greets üòç</span>\n            <span class="hljs-attr">keepDevelopersInformations</span>: <span class="hljs-literal">true</span>,\n        },\n    };\n\n</code></pre>\n<p><em>Ex. of generated txt:</em></p>\n<pre><code class="language-txt">\n    /* BACKSTAGE */\n    HumansTxt Plugin developer: Luca Iaconelli\n    From: Faenza, Italy\n    Twitter: @luxdamore\n    Instagram: https://www.instagram.com/luxdamore\n\n    /* SITE */\n    Last update: 01/13/2021\n    Standards: HTML5, CSS3, Javascript\n    Components: VueJs\n    Software: NuxtJs\n    Language: English\n    Doctype: HTML5\n\n</code></pre>\n<hr>\n<h2>üë®üèª‚Äçüíª Development</h2>\n<ol>\n<li>Clone this repository;</li>\n<li>Install dependencies using <code>yarn install</code> or <code>npm install</code>;</li>\n<li>Start development server using <code>yarn dev</code> or <code>npm run dev</code>.</li>\n</ol>\n<h2>üêû Issues</h2>\n<p>Please make sure to read the <a href="/.github/ISSUE_TEMPLATE/bug_report.md">Issue Reporting Checklist</a> before opening an issue. Issues not conforming to the guidelines may be closed immediately.</p>\n<h2>üë• Contribution</h2>\n<p>Please make sure to read the <a href="/.github/ISSUE_TEMPLATE/feature_request.md">Contributing Guide</a> before making a pull request.</p>\n<h2>üìñ Changelog</h2>\n<p>Details changes for each release are documented in the <a href="./CHANGELOG.md"><strong>release notes</strong></a>.</p>\n<h3>üìÉ License</h3>\n<p><a href="./LICENSE">MIT License</a> // Copyright (¬©) 2021-present <a href="https://lucaiaconelli.it">Luca Iaconelli</a></p>\n<h4>üíº Hire me</h4>\n<p><a href="https://lucaiaconelli.it"><img src="https://img.shields.io/badge/Contact%20Me-Let\'s%20Talk-informational?style=social&amp;logo=minutemailer" alt="Contacts"></a></p>\n<h4>üí∏ Are you feeling generous today?</h4>\n<p>If You want to share a beer, we can be really good friends</p>\n<p><strong><a href="https://www.paypal.me/luxdamore">Paypal</a> // <a href="https://www.patreon.com/luxdamore">Patreon</a> // <a href="https://ko-fi.com/luxdamore">Ko-fi</a></strong></p>\n<blockquote>\n<p>‚òÄ <em>It\'s always a good day to be magnanimous</em> - cit.</p>\n</blockquote>\n</section>\n'.split("./src/static/").join("");o.a.configure({ignoreUnescapedHTML:!0}),o.a.registerLanguage("bash",h.a),o.a.registerLanguage("xml",m.a),o.a.registerLanguage("javascript",f.a);var w={name:"homepage",computed:{readme:function(){return v}},mounted:function(){var n=this;return Object(l.a)(regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.$nextTick();case 2:n.initHighlight(),n.initReadmeLinks();case 4:case"end":return e.stop()}}),e)})))()},methods:{initHighlight:function(){var n,e=j(document.querySelectorAll(".readme pre code"));try{for(e.s();!(n=e.n()).done;){var t=n.value;o.a.highlightElement(t)}}catch(n){e.e(n)}finally{e.f()}},initReadmeLinks:function(){var n,e=j(document.querySelectorAll(".readme a"));try{for(e.s();!(n=e.n()).done;){var link=n.value;link.setAttribute("target","_blank"),link.setAttribute("rel","noopener"),link.setAttribute("title",link.textContent)}}catch(n){e.e(n)}finally{e.f()}}}},k=(t(296),t(298),t(87)),component=Object(k.a)(w,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return n.readme?t("article",{staticClass:"readme markdown-body",domProps:{innerHTML:n._s(n.readme)}}):n._e()}),[],!1,null,"0ed3b866",null);e.default=component.exports}}]);